/*
  Global styles

  Low-specificity, global styles that apply to the whole
  project: https://cube.fyi/css.html
*/
body {
  color: var(--custom-color-text, var(--color-text));
  background-color: var(--custom-color-bg, var(--color-bg));
  font-size: var(--size-step-1);
  font-family: var(--font-base);
  line-height: 1.4;
  letter-spacing: var(--tracking);
  transition: background calc(1s / 4) cubic-bezier(0.25, 1, 0.5, 1);
}

/* Base typesetting */
h1,
h2,
h3 {
  line-height: 1;
  letter-spacing: var(--tracking-s);
}

h1 {
  font-size: var(--custom-size-step, var(--size-step-5));
}

h2 {
  font-size: var(--size-step-4);
}

h3 {
  font-size: var(--size-step-3);
}

.lead {
  font-size: var(--size-step-2);
  font-weight: bold;
  line-height: 1.1;
}

/* Set line lengths */
p,
li,
blockquote:not([class]) {
  max-width: 50ch;
}

/* More generic elements */
blockquote:not([class]) {
  font-family: var(--font-serif);
  font-size: var(--size-step-2);
}

/* Markdown blockquuote:not([class])s aren't ideal, so we're presuming the person quoted is the last p */
blockquote:not([class]) p:last-of-type {
  font-family: var(--font-base);
  font-size: var(--size-step-1);
  font-weight: normal;
}

svg {
  height: 2.2ex;
  width: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
  text-decoration-color: currentcolor;
  text-decoration-thickness: 0.07em;
}

a:hover {
  text-decoration: none;
}

:focus {
  outline: 3px;
  outline-style: solid;
  outline-color: var(--nav-list-color, var(--color-text));
  outline-offset: 0.3ch;
}

:target {
  scroll-margin-block-start: 2ex;
}

main:focus {
  outline: none;
}

/* article [href^='http']:not([href*='lenesaile.com'])::after {
  content: '(external link)';
  display: inline-block;
  width: 1em;
  height: 1em;
  background-image: url('/assets/images/svg/icn-external.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60% auto;
  overflow: hidden;
  white-space: nowrap;
  text-indent: 1em;
} */

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background-color: var(--color-text);
  color: var(--color-bg);
}

.preload-transitions * {
  transition: none !important;
}

.object-fit-cover {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

blockquote {
  border-inline-start: 0.8rem solid var(--color-quaternary);
  padding: var(--space-m-l);
  font-family: var(--font-serif);

  font-size: var(--size-step-2);
}

blockquote > * + * {
  margin-block-start: var(--space-m-l);
}

blockquote :last-child {
  font-family: var(--font-base);
  font-style: normal;
  font-size: var(--size-step-1);
}

.heading-anchor:is(:hover, :focus) {
  text-decoration: underline;
}
.heading-anchor {
  text-decoration: none;
}

mark {
  all: unset;
}

@media (--motionOK) {
  .gsap-highlight {
    --duration: 1s;
    --ease: cubic-bezier(0.25, 1, 0.5, 1);
    background-repeat: no-repeat;
    background-size: 0% 100%;
    transition: color calc(var(--duration) / 4) var(--ease),
      background-color calc(var(--duration) / 4) var(--ease),
      background-size var(--duration) var(--ease);

    &.active {
      color: var(--color-dark);
      background-size: 100% 100%;
    }

    & {
      background-image: linear-gradient(var(--color-quaternary), var(--color-quaternary));
    }

    &::before,
    &::after {
      position: absolute;
      clip-path: inset(100%);
      clip: rect(1px, 1px, 1px, 1px);
      width: 1px;
      height: 1px;
      overflow: hidden;
      white-space: nowrap;
      user-select: none;
    }

    &::before {
      content: ' [highlight start] ';
    }

    &::after {
      content: ' [highlight end] ';
    }
  }
}

figcaption,
time,
.meta {
  font-size: var(--size-step-0);
  opacity: 0.8;
}

.visible-desktop {
  display: none;
}

@media (min-width: 40em) {
  .visible-desktop {
    display: block;
  }
}
