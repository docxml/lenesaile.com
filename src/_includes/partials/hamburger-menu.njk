<!-- https://web.dev/website-navigation/ -->

<nav id="mainnav" class="navbar">
  <ul>
    {% for item in navigation[page.lang].top %}
    <li>
      <a
        class="nav"
        href="{{ item.url }}"
        {{
        helpers.getLinkActiveState(item.url,
        page.url)
        |
        safe
        }}
        >{{ item.text }}</a
      >
    </li>
    {% endfor %}
  </ul>
</nav>

<!--  template element holding a button that needs to be injected when JavaScript is finally available. Source: https://web.dev/website-navigation/ -->

<template id="burger-template">
  <button type="button" aria-expanded="false" aria-label="Menu" aria-controls="mainnav">
    <span>Menu</span>
    {% include "icons/menu.svg" %}
  </button>
</template>

<!-- in js: -->

<!--
// ------------------- responsive accessible nav

const nav = document.querySelector('nav');
const list = nav.querySelector('ul');
const burgerClone = document.querySelector('#burger-template').content.cloneNode(true);
const svg = nav.querySelector('svg');

const button = burgerClone.querySelector('button');
button.addEventListener('click', e => {
  const isOpen = button.getAttribute('aria-expanded') === 'false';
  button.setAttribute('aria-expanded', isOpen);
});

// avoid DRY: disabling menu
const disableMenu = () => {
  button.setAttribute('aria-expanded', false);
  button.focus();
};

//  close on escape
nav.addEventListener('keyup', e => {
  if (e.code === 'Escape') {
    disableMenu();
  }
});

// close if clicked outside of event target
document.addEventListener('click', e => {
  const isClickInsideElement = nav.contains(e.target);
  if (!isClickInsideElement) {
    disableMenu();
  }
});

nav.insertBefore(burgerClone, list); -->
